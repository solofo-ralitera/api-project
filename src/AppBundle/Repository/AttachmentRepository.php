<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
use AppBundle\Entity\Attachment;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * AttachmentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AttachmentRepository extends EntityRepository
{

    public function getNew(array $attachment) : Attachment {
        return (new Attachment())
            ->setName($attachment['name'])
            ->setAuthor($attachment['author'])
            ->setType($attachment['type'])
            ->setParameters(json_encode([
                'body' => $attachment['body'],
            ]))
        ;
    }

    public function getNewAvatar() : Attachment{
        return new Attachment();
    }

    /**
     * @param string $entity
     * @param int $entityId
     * @return ArrayCollection
     */
    public function getEntityAttachments(string $entity, int $entityId) : ArrayCollection
    {
        return $this->getEntityManager()->getRepository($entity)
            ->find($entityId)
            ->getAttachments()
            ->map(function(Attachment $item) {
                return $item->toArray();
            });
    }

    /**
     * @param Attachment $attachment
     * @param string $entity
     * @param int $entityId
     * @return array
     * @internal param Comment $comment
     */
    public function addEntityAttachment(Attachment $attachment, string $entity,  int $entityId) : array
    {
        $this->getEntityManager()->persist($this->getEntityManager()->getRepository($entity)
            ->find($entityId)
            ->addAttachment($attachment));
        $this->getEntityManager()->flush();
        $this->getEntityManager()->clear();
        return $attachment->toArray();
    }

}
